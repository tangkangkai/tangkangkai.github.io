<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linkedlist | KK's Coding Blog]]></title>
  <link href="http://tangkangkai.github.io/blog/categories/linkedlist/atom.xml" rel="self"/>
  <link href="http://tangkangkai.github.io/"/>
  <updated>2014-07-02T17:41:54-07:00</updated>
  <id>http://tangkangkai.github.io/</id>
  <author>
    <name><![CDATA[Kangkai Tang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Add Two Numbers]]></title>
    <link href="http://tangkangkai.github.io/blog/2014/07/02/add-two-numbers/"/>
    <updated>2014-07-02T17:39:28-07:00</updated>
    <id>http://tangkangkai.github.io/blog/2014/07/02/add-two-numbers</id>
    <content type="html"><![CDATA[<p><a href="https://oj.leetcode.com/problems/add-two-numbers/">Question</a></p>

<hr />
<p>For this question, we need to take care of the carry from the previous calculation. Here I use a helper function <em>addHelper</em> to help maintain the information of the carry. Here follows the code:</p>

<div><div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> <a href="#n1" name="n1">1</a></span>    <span class="directive">public</span> ListNode addTwoNumbers(ListNode l1, ListNode l2) {
<span class="line-numbers"> <a href="#n2" name="n2">2</a></span>
<span class="line-numbers"> <a href="#n3" name="n3">3</a></span>        <span class="keyword">return</span> addHelper(l1, l2, <span class="integer">0</span>);
<span class="line-numbers"> <a href="#n4" name="n4">4</a></span>
<span class="line-numbers"> <a href="#n5" name="n5">5</a></span>    }
<span class="line-numbers"> <a href="#n6" name="n6">6</a></span>
<span class="line-numbers"> <a href="#n7" name="n7">7</a></span>    <span class="comment">/* Helper Functions */</span>
<span class="line-numbers"> <a href="#n8" name="n8">8</a></span>    <span class="comment">/* @param carry:if there is a carry from previous caculation */</span>
<span class="line-numbers"> <a href="#n9" name="n9">9</a></span>    <span class="directive">private</span> ListNode addHelper(ListNode l1, ListNode l2, <span class="type">int</span> carry) {
<span class="line-numbers"><strong><a href="#n10" name="n10">10</a></strong></span>        <span class="keyword">if</span> (l1 == <span class="predefined-constant">null</span> &amp;&amp; l2 == <span class="predefined-constant">null</span>) {
<span class="line-numbers"><a href="#n11" name="n11">11</a></span>            <span class="keyword">return</span> carry == <span class="integer">1</span> ? <span class="keyword">new</span> ListNode(<span class="integer">1</span>) : <span class="predefined-constant">null</span>;
<span class="line-numbers"><a href="#n12" name="n12">12</a></span>        } <span class="keyword">else</span> <span class="keyword">if</span> (l1 == <span class="predefined-constant">null</span>) {
<span class="line-numbers"><a href="#n13" name="n13">13</a></span>            <span class="keyword">return</span> carry == <span class="integer">1</span> ? addHelper(l2, <span class="keyword">new</span> ListNode(<span class="integer">1</span>), <span class="integer">0</span>) : l2;
<span class="line-numbers"><a href="#n14" name="n14">14</a></span>        } <span class="keyword">else</span> <span class="keyword">if</span> (l2 == <span class="predefined-constant">null</span>) {
<span class="line-numbers"><a href="#n15" name="n15">15</a></span>            <span class="keyword">return</span> carry == <span class="integer">1</span> ? addHelper(l1, <span class="keyword">new</span> ListNode(<span class="integer">1</span>), <span class="integer">0</span>) : l1;
<span class="line-numbers"><a href="#n16" name="n16">16</a></span>        } <span class="keyword">else</span> {
<span class="line-numbers"><a href="#n17" name="n17">17</a></span>            <span class="type">int</span> val1 = l1.val;
<span class="line-numbers"><a href="#n18" name="n18">18</a></span>            <span class="type">int</span> val2 = l2.val;
<span class="line-numbers"><a href="#n19" name="n19">19</a></span>
<span class="line-numbers"><strong><a href="#n20" name="n20">20</a></strong></span>            <span class="type">int</span> sum = carry + val1 + val2;
<span class="line-numbers"><a href="#n21" name="n21">21</a></span>            ListNode lstNode = <span class="keyword">new</span> ListNode(sum % <span class="integer">10</span>);
<span class="line-numbers"><a href="#n22" name="n22">22</a></span>            lstNode.next = (sum &gt;= <span class="integer">10</span>) ? (addHelper(l1.next, l2.next, <span class="integer">1</span>))
<span class="line-numbers"><a href="#n23" name="n23">23</a></span>                    : (addHelper(l1.next, l2.next, <span class="integer">0</span>));
<span class="line-numbers"><a href="#n24" name="n24">24</a></span>            <span class="keyword">return</span> lstNode;
<span class="line-numbers"><a href="#n25" name="n25">25</a></span>        }
<span class="line-numbers"><a href="#n26" name="n26">26</a></span>    }
</pre></div>
</div>
</div>
]]></content>
  </entry>
  
</feed>
